<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on 소난의 블로그</title>
    <link>https://sonanlee.com/posts/</link>
    <description>Recent content in Posts on 소난의 블로그</description>
    <image>
      <title>소난의 블로그</title>
      <url>https://sonanlee.com/images/main/sonanlee.jpg</url>
      <link>https://sonanlee.com/images/main/sonanlee.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 27 Apr 2024 15:00:00 +0000</lastBuildDate><atom:link href="https://sonanlee.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>리액트가 필수 교양이 되는 세계관</title>
      <link>https://sonanlee.com/posts/react-becomes-core-curriculum/</link>
      <pubDate>Sat, 27 Apr 2024 15:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/react-becomes-core-curriculum/</guid>
      <description>리액트가 필수 교양이 되는 세계관이 있을까? 이전에 리액트와 관련된 찬양(?), 개발자의 영감을 주는 리액트에 대한 내용을 공유했었습니다.
그리고, 저는 리액트 강의를 찍고 있습니다.
요즘에 리액트 강의는 사실 너무나도 많고 좋은 강의도 많기 때문에 제 강의가 뛰어나다고 이야기드리긴 어렵지만, 그럼에도 찍는 이유는 저는 모든 개발자를 위한 리액트 강의에는 미래가 있다고 믿는 편이기 때문입니다. 이게 무슨 뜻이냐면, 리액트가 필수 교양이 되는 세계관을 꿈꾼다 입니다.
먼저 홍보를 잠깐 하고 본론으로 들어가자면,
이번에 제 강의의 얼리버드 쿠폰이 4/29일 자정까지 부활한다고 합니다!</description>
    </item>
    
    <item>
      <title>저의 첫 게임 회사 포트폴리오</title>
      <link>https://sonanlee.com/posts/my-first-portfolio/</link>
      <pubDate>Sat, 27 Apr 2024 07:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/my-first-portfolio/</guid>
      <description>제 첫번째 포트폴리오는 실패율 100%였습니다. 제가 처음으로 취업을 준비하던 시절, 저는 대략 20개의 게임 회사에 지원서를 썼고, 모두 떨어졌습니다. 사실 지금 생각하면 떨어지는 게 당연했던 것 같습니다. 그때 저의 포트폴리오는 작은 Docs 파일 하나였고, 거기엔 제가 만든 게임 제목과 스크린샷, 그리고 짧은 설명이 한두 줄 있었습니다.
물론 포트폴리오 외에도 제가 매력적이지 않다는 생각을 많이 했던 것 같습니다.
네.. 제 첫 번째 포트폴리오는 100% 실패율을 보인 실패작이었습니다.
포트폴리오의 재구성 그래서 그때부터 저는 선배/후배/동기를 따지지 않고, 많은 지인들에게 제 포트폴리오와 이력서를 보여주고 다녔고, 물어보곤 했습니다.</description>
    </item>
    
    <item>
      <title>개발자에게 영감을 주는 리액트</title>
      <link>https://sonanlee.com/posts/why-you-learn-react/</link>
      <pubDate>Wed, 10 Apr 2024 09:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/why-you-learn-react/</guid>
      <description>저는 꽤 오랫동안 게임 개발자로 일을 해왔습니다.
실제로 게임 개발이라는 것은 단순히 게임을 개발하는 것을 벗어나서 다양한 툴들과 다양한 스크립트들도 작성하게 됩니다. 그러다가 저는 리액트를 접했습니다. 팀 내부에 런쳐나 툴을 사용하는 용도였죠.
처음 접한 리액트는 사실 좀 충격적이였습니다.
충격의 리액트 리액트를 마주했을 때 저는 MVX라고 불리는 패턴들을 좋아하는 개발자였습니다.
실제로 만드는 게임에도 UI를 만들 때, MVP 패턴을 이용하고 있었고, 최근에 직방에서 MV(R)P(Rx)도 조합해서 사용한적도 있습니다. 개인적으로 저에게 MVP나 MVVM과 같은 패턴은 꽤 구조적으로 편하고 유용했습니다.</description>
    </item>
    
    <item>
      <title>엔지니어링 문화를 만들 때 중요한 3가지</title>
      <link>https://sonanlee.com/posts/most-important-things-for-swe/</link>
      <pubDate>Mon, 29 Jan 2024 09:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/most-important-things-for-swe/</guid>
      <description>오늘은 제가 소프트웨어 엔지니어팀 문화를 만들면서 배웠던, 제가 생각하는 가장 중요한 3가지를 공유하고자 합니다. 이 글이 이제 막 개발팀 시니어나, 팀장이 되는 분들에게 도움이 되면 좋겠습니다.
저는 대략 3번정도 엔지니어링 팀을 이끌면서 다양한 시도를 해왔다고 생각합니다(?)
엄청나게 빡세게 코드리뷰를 하기도하고, 비자아적 프로그래밍을 추구해보자고 하면서 코드 비판을 감정 없이(?) 주고받은 적도 있습니다.(그리고 감정이 상했죠..하하하)
그러한 시행착오 끝에 찾은 저에게 적합한 &amp;ldquo;엔지니어링 문화를 만들 때 중요한 3가지&amp;rdquo; 를 이야기해 보고자 합니다.</description>
    </item>
    
    <item>
      <title>처음 리더가 되고 받은 미션</title>
      <link>https://sonanlee.com/posts/first-mission-as-a-leader/</link>
      <pubDate>Mon, 15 Jan 2024 09:00:00 +0900</pubDate>
      
      <guid>https://sonanlee.com/posts/first-mission-as-a-leader/</guid>
      <description>여러분이 처음 리더가 되던 시절을 기억하시나요? 오늘은 제가 처음 리더가 되던 시절에 대한 이야기를 해볼까 합니다.
리스펙트를 받으세요. &amp;ldquo;팀원들의 리스펙트를 받으세요&amp;rdquo; 제가 처음 리더가 되고 나서 받은 미션이었습니다.
저는 조금 어린 나이에 리더가 되었습니다. 29살, 경력으론 6년 차쯤 팀에서 리더가 되었습니다.
저를 리더로 선임했던 디렉터는 1:1 미팅에서 저에게 하나의 미션을 주셨습니다.
&amp;ldquo;팀원들의 리스펙트를 받으세요&amp;rdquo;
아마도 새로 리더가 되시는 분이나, 이직을 통해 리더가 되는 분들에게 가장 큰 미션중 하나일 겁니다.</description>
    </item>
    
    <item>
      <title>수평적 조직구조는 죽었다.</title>
      <link>https://sonanlee.com/posts/flatlandisdead/</link>
      <pubDate>Thu, 11 Jan 2024 09:00:00 +0900</pubDate>
      
      <guid>https://sonanlee.com/posts/flatlandisdead/</guid>
      <description>이번엔 수평적 조직구조에 대한 제 경험을 공유해보고자 합니다.
제가 다녔던 게임 업계는 대표적인 수평적 구조를 지향하는 곳이었습니다.
폭넓은 창의력! 집단 지성! 혁신적인 아이디어!
하지만 이상은 조금 달랐을지도 모르겠습니다.
제가 경험한 수평적 조직구조 제가 수평적 조직구조를 맹신하게 된 건 Valve의 신입사원 안내서부터 였을 겁니다. 10년 전쯤 유행했던 건데 기억하시는 분들이 계실지 모르겠네요.
수평적 구조에 대한 로망을 갖고 들어간 게임 업계에서 처음으로 수평적 조직구조를 경험했던 저는 꽤 충격을 많이 받았습니다.
&amp;ldquo;와, 모두가 자유롭게 이야기하고, 모두가 아이디어를 낼 수 있네?</description>
    </item>
    
    <item>
      <title>가장 늦게 퇴근하는 리더 vs 가장 빨리 퇴근하는 리더</title>
      <link>https://sonanlee.com/posts/typeofleader/</link>
      <pubDate>Wed, 10 Jan 2024 09:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/typeofleader/</guid>
      <description>게임 업계를 다니면서 만났던 약간은 극단의 두 종류의 리더분이 있습니다.
가장 늦게 퇴근하는 리더 한 분은 가장 늦게 퇴근하는 리더로, 특별한 일이 없다면 새벽이 되었건 철야가 되었건 끝까지 남아서 함께하는 리더 였습니다. 그 리더의 신조는 함께하는 리더 였습니다.
그분은 함께한다는 경험을 부여해 주고, 언제든 3분 대기조처럼 대응을 해주셨습니다. 때로 작업이 너무 늦어지거나, 다들 너무 바쁘다고 판단이 들면 간단한 버그나 기능을 직접 개발하시기도 했습니다. 지금 생각해 보면 그 리더의 워라밸은 아마도 최악이었을 것입니다.</description>
    </item>
    
    <item>
      <title>개발자도 정치에 대해 관심을 갖고, 더 많이 대화를 해야 하는 이유</title>
      <link>https://sonanlee.com/posts/developer-politics/</link>
      <pubDate>Mon, 10 Oct 2022 12:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/developer-politics/</guid>
      <description>오랜만에 쓰는 글인데, 가볍지 않은 주제를 가져왔습니다!
한국에서의 정치적 발언 많은 분들도 아시겠지만, 한국에서 오픈 채팅방이나 카페 활동등에서 &amp;ldquo;정치적 발언&amp;quot;은 대부분 금지되어 있습니다. 아마도, 가장 마찰이 많고, 가장 문제가 많았기 때문일 겁니다.
실제로 조금만 경험해보면, 극단적으로 정치적 색을 드러낸다던가 밑도 끝도 없이 편을 들어주는 건설적이지 않은 토론이 오가기 때문이지요.
그럼에도 불구하고, 우리는 정치적색을 덜 드러내면서 좀 더 마찰하고, 좀더 건설적으로 대화를 시작해야 합니다. 제가 다녔던 회사 중에 한 게임 스튜디오에서는 &amp;lsquo;종교&amp;rsquo;에 대한 대화는 금지이지만, &amp;lsquo;정치적 대화&amp;rsquo;를 적극적으로 하라고 권장했었습니다.</description>
    </item>
    
    <item>
      <title>2022년 배우면 좋은 프로그래밍 언어</title>
      <link>https://sonanlee.com/posts/2022-best-programming-language/</link>
      <pubDate>Tue, 25 Jan 2022 14:53:45 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/2022-best-programming-language/</guid>
      <description>작년에 작성했던 2021년 배우면 좋은 프로그래밍 언어의 2022년판!!
올해의 주제는 &amp;ldquo;내가 만약 주니어라면,&amp;rdquo; 이다!
내가 만약 주니어라면, 어떤 언어를 배우는 게 좋을까? 폭풍처럼 지나간 2021년은 말 그대로 코딩 교육 열풍이였다. 특히 연초에 있었던 개발자 연봉 인상 열풍으로 인해 전공/비전공자 모두 소프트웨어 엔지니어 라는 직종에 많은 관심을 가지게 된 해였다.
나 또한, 2021년동안 다양한 곳에서 감사하게도 불러주셔서 꽤 많은 강의를 다녔었는데, 취업을 위한 프로그래밍 뿐만 아니라 기술에 대한 지식 습득을 위해 프로그래밍을 배우는 분들도 있었다.</description>
    </item>
    
    <item>
      <title>커리어리 스킬업과 파이썬 강의를 찍었습니다!</title>
      <link>https://sonanlee.com/posts/careerlyskillup-lecture/</link>
      <pubDate>Sun, 20 Jun 2021 13:39:23 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/careerlyskillup-lecture/</guid>
      <description>안녕하세요. 소난입니다.
최근 근황 이전에 2021년 배우면 좋은 프로그래밍 언어에서 올해에 언어로 파이썬을 이야기했던 적이 있는데요. 이를 실천하고, 전파하기 위해 이번에 커리어리 스킬업이라는 직장인을 위한 온라인 강의 플랫폼과 함께 파이썬 강의를 찍었습니다 :)
이 강의를 찍으면서 정말 다른 강사분들을 저절로 존경하게 되더라구요. 정말 &amp;lsquo;지식을 누군가에게 전달한다는 것은 아무나 하는 것이 아니구나&amp;rsquo; 라는 생각이 많이 들었습니다.
오늘은, 이 강의를 찍으면서 제가 경험했던 내용들이나 강의에 담고 싶었던 내용들을 여러분들에게 공유하고 싶어 이렇게 포스트를 써보려고 합니다 😍</description>
    </item>
    
    <item>
      <title>제품 프레임워크 : Proven, Better, New</title>
      <link>https://sonanlee.com/posts/product-framework-proven-better-new/</link>
      <pubDate>Sun, 25 Apr 2021 02:15:08 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/product-framework-proven-better-new/</guid>
      <description>이 글은 Product Management : Science And Emotion 에서 Proven, Better, New에 해당하는 부분을 번역, 요약한 글입니다.
The Framework 프로덕트의 성공에는 과학적 접근과, 감정의 컨트롤이 필요합니다. 제품을 만드는 초기 단계는 가장 흥미롭고 중요한 시기이고, 다양한 접근법이 있습니다. 오늘 소개시켜드릴 주제는 해당 접근 법 중 하나인 &amp;ldquo;Proven, Better, New&amp;quot;라는 프레임워크 입니다. 사실 Proven, Better, New 는 1960년 제약 업종에서부터 시작했습니다.
각 키워드의 정의는 아래와 같습니다.
이미 있는 기능은 Proven, 다른 프로덕트에도 있는 것을 의미합니다.</description>
    </item>
    
    <item>
      <title>게임은 어떻게 혁신을 달성할까?, 게임 스튜디오 리더쉽(GDC2017)</title>
      <link>https://sonanlee.com/posts/gdc2017-game-studio-leadership/</link>
      <pubDate>Fri, 02 Apr 2021 15:00:21 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/gdc2017-game-studio-leadership/</guid>
      <description>Schell Games의 Founder인 Jesse Schell이 2017 GDC에서 한 내용으로, 2020년에 유튜브에 공개되었다. 최근 유튜브의 알고리즘이 이곳으로 인도하여 보게되었는데, 평소에 관심있던 조직빌딩쪽이라 매우 재밌게 보게됐다. 전반적으로는 게임 스튜디오를 키우고 만드는 방법에 대해서 설명하고, 2017년 자료이지만 개인적으로 매우 와닿았던 부분만 정리한다.
개발자의 가치(Developer Value) 기술 열정 존중하는 태도 기술 * 열정 * 존중하는 태도 = 개발자의 가치
유능한 개발자는 능력주의에 기반한 능력만 고려하지 않는다. 물론, 능력이 좋다면 일반적으로 가치는 높다. 허나, 실제로 업계에서 존경받는 개발자는 실력과 더불어 오는 중요한 포인트들이 있다.</description>
    </item>
    
    <item>
      <title>프로덕트의 가치를 읽는다. 《인스파이어드》</title>
      <link>https://sonanlee.com/posts/reading-book-inspired/</link>
      <pubDate>Wed, 13 Jan 2021 21:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/reading-book-inspired/</guid>
      <description>만들만한 가치가 있는 프로덕트가 아니라면, 엔지니어팀이 얼마나 휼륭한지는 아무 의미가 없다.
인스파이어드, P3
이 책을 읽게 된 가장 큰 이유 세상에는 수없이 많은 게임 스튜디오와 개발사가 있다. 그들은 자신만의 게임을 개발하지만, 그 중에 정말 많은 수의 게임이 출시도 못하고 사라진다. 왜 이렇게 게임 만드는 것은 어려운가라는 질문으로 시작해서, 찾게 된 책이 이 책이다.
IT 프로덕트에 대한 프로세스를 이해하면 게임쪽에 대한 좋은 힌트를 얻을 수 있지 않을까?
프로덕트 개발에 대한 모든 것 프로덕트를 잘 만들 기 위해서는 좋은 프로덕트를 발견하는 것에서 시작되어야 한다.</description>
    </item>
    
    <item>
      <title>2021년 배우면 좋은 프로그래밍 언어</title>
      <link>https://sonanlee.com/posts/2021-best-programming-language/</link>
      <pubDate>Sun, 10 Jan 2021 21:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/2021-best-programming-language/</guid>
      <description>1 🧡 이 글은 게임 개발자 관점에서 작성된 글입니다. 어떤 언어를 배우는게 좋을까? 2021년을 시작하면서 새로운 언어를 배우려고 조사하는 김에 작성하기 시작했다. 아마도, 게임 프로그래머라면 주로 다루던 언어는 C++/C# 등과 같은 C계열의 언어였을텐데, 조금 새로운 바람이 필요한 분들에게 도움이 되길 기대한다.
Python TIOBE Index For Python
대부분의 프로그래밍 언어 랭킹 사이트에서 파이썬은 압도적으로 높은 순위를 자랑한다. 2021년 1월 현재 PYPL 1위, TOIBE 3위로 랭크되어 있으며, 이제 프로그래머라면 반드시 알아야하는 언어가 되었다.</description>
    </item>
    
    <item>
      <title>매니저들의 필독서, 《빌 캠벨, 실리콘밸리의 위대한 코치》</title>
      <link>https://sonanlee.com/posts/reading-book-bill/</link>
      <pubDate>Fri, 25 Dec 2020 03:05:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/reading-book-bill/</guid>
      <description>실리콘 밸리 전설의 멘토 팀 캠벨은 실리콘 밸리에서 애플, 구글, 페이스북, 트위터, 이베이등의 숨겨진 스승이였다. 그는 독재자형 리더를 인간적인 리더로 바꾸었으며, 개성이 강한 직원들을 헌신적인 팀플레이어로 만들었다. 경쟁이 아닌 협력으로, 명령이 아닌 신뢰로 가장 혁신적이고 협력적인 조직을 만들게 해준 최고의 코치, 그가 빌 캠벨이다.
이 책은 지금은 고인이 된 빌 캠벨의 코칭에 대한 기억을 하나씩 더듬어가는 책이다. 이 책의 저자이자 전 구글 CEO인 에릭 슈미트는 &amp;lsquo;코치&amp;rsquo;의 가르침을 미래 세대에 전수하기 위한 목적으로 이 책을 썼다고 한다.</description>
    </item>
    
    <item>
      <title>천재는 만들어진다. 《생각이 돈이 되는 순간》</title>
      <link>https://sonanlee.com/posts/reading-book-creativecurve/</link>
      <pubDate>Fri, 18 Dec 2020 07:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/reading-book-creativecurve/</guid>
      <description>천재적인 아이디어의 진실 천재적인 아이디어는 어디서 나오는 걸까?,
아이폰 같은 프로덕트에 대한 생각은 선택받은 자에게만 허용 되는걸까?
순간적인 신내림 같은 영감이 나에게도 올까?
누구든지 이런 고민을 해본적 있을 거다. 연구원이라면, 새로운 논문이나 연구 주제에 대한 아이디어가 하늘에서 떨어졌으면 좋겠다라는 생각, 게임 개발자라면 세상에 없는 재밌는 게임에 대한 아이디어가 뚝 떨어졌으면 좋겠다라는 생각을 한번쯤은 해보지 않았을까 싶다.
생각이 돈이 되는 순간(원제 : The Creative Curve)은 영감과 창의력이라고 부르는 것들에 대해 그 뒤에 숨어있는 진짜 노력을 이야기해주는 책이다.</description>
    </item>
    
    <item>
      <title>아마존 혁신에 대한 생생한 이야기, 《나는 아마존에서 미래를 다녔다》</title>
      <link>https://sonanlee.com/posts/reading-book-amazon/</link>
      <pubDate>Sat, 12 Dec 2020 08:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/reading-book-amazon/</guid>
      <description>세계에서 제일 혁신적인 기업 세계에서 가장 혁신적인 회사라고 하면 떠오르는 기업에 아마존이 있다. 세상에서 가장 고객 중심적인 회사라는 미션 스테이트먼트를 가진 아마존에 대한 나의 첫기억은 인터넷으로 전공책을 사던 서점이였다. 그리고선 꽤 오랜시간이 흘렀고, 아마존은 어느샌가 모든것을 파고, 어디로든(그게, 미국 -&amp;gt; 한국이던) 배달해주는 온라인 마켓이 되어 있었다. 또한, AWS(Amazon Web Service)라는 IT인이라면 반드시 알아야 하는 세계적인 클라우드 플랫폼 회사가 되어 있었다.
to be Earth’s most customer centric company.
Amazon UK : Our Mission (아마존 미션 스테이트먼트)</description>
    </item>
    
    <item>
      <title>실리콘밸리 혁신의 비밀, 《이기적 직원들이 만드는 최고의 회사》</title>
      <link>https://sonanlee.com/posts/reading-book-bestcompany/</link>
      <pubDate>Sun, 06 Dec 2020 11:02:49 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/reading-book-bestcompany/</guid>
      <description>실리콘 밸리는 어떻게 혁신을 이루는가?
실리콘 밸리의 혁신은 어디서 오는가? 엔지니어라면 누구나 실리콘밸리를 꿈꾼다. 실리콘밸리에서 일하는 삶은 어떤 삶일까?
얼마 전에 읽었던 &amp;ldquo;이기적 직원들이 만드는 최고의 회사&amp;ldquo;에서 이에 대한 해답을 얻을 수 있었다. 이 책에선 막연히 알고 있던 실리콘밸리에서의 삶이나, 기존에 알던 실리콘밸리에 대한 선입견을 완전히 부수고, 새로운 관점에서 역할 조직과 혁신에 대한 저자의 경험을 그대로 전달해준다.
먼저, 실리콘밸리를 하면 누구든지 먼저 떠올리는게 _수평적 조직 구조_와 애자일 방법론 일 것이다.</description>
    </item>
    
  </channel>
</rss>
