<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>blog on 소난의 블로그</title>
    <link>https://sonanlee.com/tags/blog/</link>
    <description>Recent content in blog on 소난의 블로그</description>
    <image>
      <title>소난의 블로그</title>
      <url>https://sonanlee.com/images/main/sonanlee.jpg</url>
      <link>https://sonanlee.com/images/main/sonanlee.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 10 Apr 2024 09:00:00 +0000</lastBuildDate><atom:link href="https://sonanlee.com/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>개발자에게 영감을 주는 리액트</title>
      <link>https://sonanlee.com/posts/why-you-learn-react/</link>
      <pubDate>Wed, 10 Apr 2024 09:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/why-you-learn-react/</guid>
      <description>저는 꽤 오랫동안 게임 개발자로 일을 해왔습니다.
실제로 게임 개발이라는 것은 단순히 게임을 개발하는 것을 벗어나서 다양한 툴들과 다양한 스크립트들도 작성하게 됩니다. 그러다가 저는 리액트를 접했습니다. 팀 내부에 런쳐나 툴을 사용하는 용도였죠.
처음 접한 리액트는 사실 좀 충격적이였습니다.
충격의 리액트 리액트를 마주했을 때 저는 MVX라고 불리는 패턴들을 좋아하는 개발자였습니다.
실제로 만드는 게임에도 MVP 패턴을 이용하고 있었고, 최근에 직방에서 MV(R)P(Rx)도 조합해서 사용한적도 있습니다. 개인적으로 MVP나 MVVM과 같은 패턴은 꽤 구조적으로 편하고 유용했습니다.</description>
    </item>
    
    <item>
      <title>엔지니어링 문화를 만들 때 중요한 3가지</title>
      <link>https://sonanlee.com/posts/most-important-things-for-swe/</link>
      <pubDate>Mon, 29 Jan 2024 09:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/most-important-things-for-swe/</guid>
      <description>오늘은 제가 소프트웨어 엔지니어팀 문화를 만들면서 배웠던, 제가 생각하는 가장 중요한 3가지를 공유하고자 합니다. 이 글이 이제 막 개발팀 시니어나, 팀장이 되는 분들에게 도움이 되면 좋겠습니다.
저는 대략 3번정도 엔지니어링 팀을 이끌면서 다양한 시도를 해왔다고 생각합니다(?)
엄청나게 빡세게 코드리뷰를 하기도하고, 비자아적 프로그래밍을 추구해보자고 하면서 코드 비판을 감정 없이(?) 주고받은 적도 있습니다.(그리고 감정이 상했죠..하하하)
그러한 시행착오 끝에 찾은 저에게 적합한 &amp;ldquo;엔지니어링 문화를 만들 때 중요한 3가지&amp;rdquo; 를 이야기해 보고자 합니다.</description>
    </item>
    
    <item>
      <title>처음 리더가 되고 받은 미션</title>
      <link>https://sonanlee.com/posts/first-mission-as-a-leader/</link>
      <pubDate>Mon, 15 Jan 2024 09:00:00 +0900</pubDate>
      
      <guid>https://sonanlee.com/posts/first-mission-as-a-leader/</guid>
      <description>여러분이 처음 리더가 되던 시절을 기억하시나요? 오늘은 제가 처음 리더가 되던 시절에 대한 이야기를 해볼까 합니다.
리스펙트를 받으세요. &amp;ldquo;팀원들의 리스펙트를 받으세요&amp;rdquo; 제가 처음 리더가 되고 나서 받은 미션이었습니다.
저는 조금 어린 나이에 리더가 되었습니다. 29살, 경력으론 6년 차쯤 팀에서 리더가 되었습니다.
저를 리더로 선임했던 디렉터는 1:1 미팅에서 저에게 하나의 미션을 주셨습니다.
&amp;ldquo;팀원들의 리스펙트를 받으세요&amp;rdquo;
아마도 새로 리더가 되시는 분이나, 이직을 통해 리더가 되는 분들에게 가장 큰 미션중 하나일 겁니다.</description>
    </item>
    
    <item>
      <title>수평적 조직구조는 죽었다.</title>
      <link>https://sonanlee.com/posts/flatlandisdead/</link>
      <pubDate>Thu, 11 Jan 2024 09:00:00 +0900</pubDate>
      
      <guid>https://sonanlee.com/posts/flatlandisdead/</guid>
      <description>이번엔 수평적 조직구조에 대한 제 경험을 공유해보고자 합니다.
제가 다녔던 게임 업계는 대표적인 수평적 구조를 지향하는 곳이었습니다.
폭넓은 창의력! 집단 지성! 혁신적인 아이디어!
하지만 이상은 조금 달랐을지도 모르겠습니다.
제가 경험한 수평적 조직구조 제가 수평적 조직구조를 맹신하게 된 건 Valve의 신입사원 안내서부터 였을 겁니다. 10년 전쯤 유행했던 건데 기억하시는 분들이 계실지 모르겠네요.
수평적 구조에 대한 로망을 갖고 들어간 게임 업계에서 처음으로 수평적 조직구조를 경험했던 저는 꽤 충격을 많이 받았습니다.
&amp;ldquo;와, 모두가 자유롭게 이야기하고, 모두가 아이디어를 낼 수 있네?</description>
    </item>
    
    <item>
      <title>가장 늦게 퇴근하는 리더 vs 가장 빨리 퇴근하는 리더</title>
      <link>https://sonanlee.com/posts/typeofleader/</link>
      <pubDate>Wed, 10 Jan 2024 09:00:00 +0000</pubDate>
      
      <guid>https://sonanlee.com/posts/typeofleader/</guid>
      <description>게임 업계를 다니면서 만났던 약간은 극단의 두 종류의 리더분이 있습니다.
가장 늦게 퇴근하는 리더 한 분은 가장 늦게 퇴근하는 리더로, 특별한 일이 없다면 새벽이 되었건 철야가 되었건 끝까지 남아서 함께하는 리더 였습니다. 그 리더의 신조는 함께하는 리더 였습니다.
그분은 함께한다는 경험을 부여해 주고, 언제든 3분 대기조처럼 대응을 해주셨습니다. 때로 작업이 너무 늦어지거나, 다들 너무 바쁘다고 판단이 들면 간단한 버그나 기능을 직접 개발하시기도 했습니다. 지금 생각해 보면 그 리더의 워라밸은 아마도 최악이었을 것입니다.</description>
    </item>
    
  </channel>
</rss>
